// took some stuff from https://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-creating-a-spring-boot-web-application-project/

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(
            'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE',
            'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.0.2'
        )
    }
}

plugins {
    id 'groovy'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
}
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'com.syntj'
version '1.0-SNAPSHOT'

sourceSets {
    main.java.srcDirs = ['src/main/java']
    main.kotlin.srcDirs = ['src/main/kotlin']
    main.resources.srcDirs = ['src/main/resources']
    test.kotlin.srcDirs = ['src/test/java', 'src/test/kotlin']
    test.resources.srcDirs = ['src/test/resources']
}

repositories {
    mavenCentral()
}

testSets {
    integrationTest { dirName = 'integration-test' }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+"
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    compile 'org.slf4j:slf4j-api:1.7.30'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'ch.qos.logback:logback-core:1.2.3'

    // Wiremock will only be available in integration tests, but not in unit tests
    // this seems to be auto-wired to the testSets: integrationTest.
    // "Implementation" must be a usable suffix for any gradle task
    integrationTestImplementation 'com.github.tomakehurst:wiremock:2.19.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

project.integrationTest {
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}


