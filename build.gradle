// took some stuff from https://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-creating-a-spring-boot-web-application-project/

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(
                'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE',
                'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.0.2'
        )
    }
}

plugins {
    id 'groovy'
    id 'java'
    id "org.jetbrains.kotlin.jvm" version '1.5.32'
    id 'org.unbroken-dome.test-sets' version '4.0.0'
}
//apply plugin: 'spring-boot'


ext {
    springBootVersion = "2.7.10"
    kotlinVersion = "1.5.32"
    junitVersion = '4.13.1'
    jvmVersion = "11"
    fasterXmlJacksonVersion = "2.14.2"
    qosLogbackVersion = "1.2.9"
    groovyVersion = '2.4.21'
}

sourceCompatibility = jvmVersion
targetCompatibility = jvmVersion

group 'com.syntj'
version '1.0-SNAPSHOT'

sourceSets {
    main.java.srcDirs = []
    main.kotlin.srcDirs = ['src/main/java', 'src/main/kotlin']
    test.kotlin.srcDirs = ['src/test/java', 'src/test/kotlin']
    main.resources.srcDirs = ['src/main/resources']
    test.resources.srcDirs = ['src/test/resources']
}

repositories {
    mavenCentral()
}

testSets {
    integrationTest { dirName = 'integration-test' }
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    implementation("org.springframework.boot:spring-boot-starter:$springBootVersion")
    implementation "org.codehaus.groovy:groovy-all:$groovyVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:2.+"
    implementation "com.fasterxml.jackson.core:jackson-core:$fasterXmlJacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$fasterXmlJacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$fasterXmlJacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "org.hamcrest:hamcrest:2.2"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "ch.qos.logback:logback-classic:$qosLogbackVersion"
    implementation "ch.qos.logback:logback-core:$qosLogbackVersion"

    // Wiremock will only be available in integration tests, but not in unit tests
    // this seems to be auto-wired to the testSets: integrationTest.
    // "Implementation" must be a usable suffix for any gradle task
    integrationTestImplementation 'com.github.tomakehurst:wiremock:2.19.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "$jvmVersion"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$jvmVersion"
}

project.integrationTest {
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}


